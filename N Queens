#include<bits/stdc++.h>
void add(vector<vector<int>> &ans, vector<vector<int>> &board, int n){
    vector<int> temp;
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            temp.push_back(board[i][j]);
        }
    }
    ans.push_back(temp);
}

void solve(int col,vector<vector<int>> &ans, vector<vector<int>> &board, vector<int> &leftR, vector<int> &upperD, vector<int> &lowerD, int n){
    
    if(col == n){
        add(ans,board,n);
        return;
    }
    
    for(int row = 0; row<n; row++){
        if(leftR[row]==0 && upperD[n-1+col-row]==0 && lowerD[row+col]==0){
            board[row][col] = 1;
            leftR[row] = 1;
            upperD[n-1+col-row] = 1;
            lowerD[row+col] = 1;
            solve(col+1, ans, board, leftR, upperD, lowerD, n);
            board[row][col] = 0;
            leftR[row] = 0;
            upperD[n-1+col-row] = 0;
            lowerD[row+col] = 0;
        }
    }
}

vector<vector<int>> solveNQueens(int n) {
    // Write your code here.
    vector<vector<int>> board(n, vector<int> (n,0));
    vector<vector<int>> ans;
    vector<int> leftR(n, 0);
    vector<int> upperD(2*n-1, 0);
    vector<int> lowerD(2*n-1, 0);
    solve(0, ans, board, leftR, upperD, lowerD, n);
    return ans;
}
