bool isPalindrome(string s, int ind, int i){
    while(ind<=i){
        if(s[ind++] != s[i--]) return false;
    }
    return true;
}

void func(int ind, string s, vector<string> &path, vector<vector<string>> &ans){
    if(ind == s.size()){
        ans.push_back(path);
        return;
    }
    
    for(int i=ind; i<s.size(); i++){
        if(isPalindrome(s, ind, i)){
            path.push_back(s.substr(ind, i-ind+1));
            func(i+1, s, path, ans);
            path.pop_back();
        }
    }
}


vector<vector<string>> partition(string &s) 
{
    // Write your code here.
    vector<string> path;
    vector<vector<string>> ans;
    func(0, s, path, ans);
    return ans;
}
